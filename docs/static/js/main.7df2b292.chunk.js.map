{"version":3,"sources":["assets/icons/search.svg","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","placeholder","type","value","onChange","target","src","searchIcon","alt","getGifs","category","a","urlFetch","encodeURI","fetch","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","info","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,MAA0B,mCC2C1BA,EAvCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKhB,SACE,sBAAKO,UAAU,aAAf,UACE,uBACEC,YAAY,YACZD,UAAU,iGACVE,KAAK,OACLC,MAAOX,EACPY,SApBkB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,UAqBnB,qBACEH,UAAU,4DACVM,IAAKC,EACLC,IAAI,qB,+BC7BDC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,UAHX,uCAGW,cACQC,UAAUH,GADlB,6BAFX,oCAEW,SAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC5BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARf,kBAWdL,GAXc,4CAAH,sDCQLQ,EATK,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKvB,UAAU,0DAAf,UACE,qBAAKA,UAAU,oBAAoBM,IAAKiB,EAAKf,IAAKc,IAClD,mBAAGtB,UAAU,cAAb,SAA4BsB,QCsBnBK,EAxBC,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdnB,mBAAS,CACjC0B,KAAM,GACNW,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACRtB,EAAQC,GACLsB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBb,KAAMgB,EACNL,SAAS,SAEZ,CAAClB,IAEGmB,EDZ2BK,CAAaxB,GAAjCc,EADkB,EACxBP,KAAcW,EADU,EACVA,QAEtB,OACE,qCACE,oBAAI5B,UAAU,0DAAd,SAAyEU,IACxEkB,GACC,qBAAK5B,UAAU,qGAAf,sBAGF,qBAAKA,UAAU,6GAAf,SAEIwB,EAAOL,KAAI,SAAAgB,GAAI,OACb,cAAC,EAAD,eAEMA,GADCA,EAAKd,aEYTe,MA1Bf,WAAgB,IAAD,EACuB7C,mBAAS,CAAC,KADjC,mBACNQ,EADM,KACMT,EADN,KAMb,OACE,qCACE,sBAAKU,UAAU,iBAAf,UACE,oBAAIA,UAAU,oIAAd,oBACA,cAAC,EAAD,CAAaV,cAAeA,OAE9B,uBACA,6BAEIS,EAAWoB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CACEA,SAAUA,GACLA,YCVJ2B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7df2b292.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.4880e187.svg\";","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport searchIcon from '../assets/icons/search.svg'\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (inputValue.trim().length > 2) {\n      setCategories(categories => [inputValue, ...categories])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"flex group\">\n        <input\n          placeholder=\"Buscar...\"\n          className=\"font-semibold rounded-md border-2 pl-8 mb-4 mt-2 w-4/5 md:w-40 lg:max-w-lg  border-transparent\"\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n        <img\n          className=\"group-hover:animate-bounceEdit -ml-28  md:-ml-40 w-4 mb-2\"\n          src={searchIcon}\n          alt=\"searchIcon\"\n        />\n      </div>\n    </form>\n  )\n\n}\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","const url = 'https://api.giphy.com/v1/gifs/search'\nconst key = 'k16ASPVCoedoLPauW2yiLARxn6hBKFUu'\n\nexport const getGifs = async (category) => {\n  const urlFetch = `${url}?q=${encodeURI(category)}&limit=10&api_key=${key}`\n  const res = await fetch(urlFetch)\n  const { data } = await res.json()\n\n  const gifs = data.map(img => ({\n    id: img.id,\n    title: img.title,\n    url: img.images?.downsized_medium.url\n  }))\n\n  return gifs\n}","import React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"shadow-xl text-gray-600 bg-white  rounded-lg mb-4 mr-6 \">\n      <img className=\"max-w-sm max-h-64\" src={url} alt={title} />\n      <p className=\"text-center\">{title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3 className=\"text-3xl font-bold uppercase text-green-600 text-center\">{category}</h3>\n      {loading &&\n        <div className=\"animate-pulse font-sans text-center text-2xl transition ease-out duration-150 text-green-300 mt-16\">\n          Cargando\n        </div>}\n      <div className=\"overflow-hidden mx-auto flex flex-row\tflex-wrap animate-fadeIn content-center items-center justify-center\">\n        {\n          images.map(info => (\n            <GifGridItem\n              key={info.id}\n              {...info}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category)\n      .then(imgs => setState({\n        data: imgs,\n        loading: false\n      }))\n  }, [category])\n\n  return state\n}\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction App() {\n  const [categories, setCategories] = useState([''])\n\n  /* const handleChange = () => {\n    setCategories([...categories, 'El pepe'])\n  } */\n  return (\n    <>\n      <div className=\"flex space-x-4\">\n        <h2 className=\"py-2 px-4 text-3xl transition duration-500 ease-in-out text-green-600 text-red-600 transform hover:-translate-y-1 hover:scale-110\">GifApp</h2>\n        <AddCategory setCategories={setCategories} />\n      </div>\n      <hr />\n      <ol>\n        {\n          categories.map(category => (\n            <GifGrid\n              category={category}\n              key={category}\n            />\n          ))\n        }\n      </ol>\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}